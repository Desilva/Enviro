@model env.Models.Wrapper.GraphicTypeWrapper
@{
    Layout = null;
    ViewBag.Title = "Enviro - " + Model.name + " Environmental Monitoring Data";
    
}
<div id="content-header">
	<h1>@Model.name Environmental Monitoring Data</h1>
</div>
<div id="breadcrumb">
	<a href="#" title="Go to Master Data" class="tip-bottom home"><i class="icon-home"></i> Environmental Monitoring Data</a>
	<a href="#" class="current">@Model.name Environmental Monitoring Data</a>
</div>
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12">
            <h4>
                Peraturan: @Model.peraturan
            </h4>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12">
            <div class="widget-box">
		        <div class="widget-title">
			        <span class="icon">
				        <i class="icon-align-justify"></i>									
			        </span>
			        <h5>@Model.name Environmental Monitoring Data</h5>
		        </div>
		        <div class="widget-content nopadding">
                    <div id="grid-graphic-data" class="span12"></div>
		        </div>
            </div>
        </div>
    </div>
</div>
<script>
    var lokasi = [];
    var parameter = [];
    loadLokasiAndParameter();

    function loadLokasiAndParameter() {
        $.ajax({
            url: "Graphics/BindingLokasiSampling?type=@Model.id",
            type: 'get',
            dataType: 'json',
            data: {},
            success: function (data) {
                if (data) {
                    for (var a in data) {
                        lokasi.push(data[a]);
                    }
                }

                $.ajax({
                    url: "Graphics/BindingParameter?type=@Model.id",
                    type: 'get',
                    dataType: 'json',
                    data: {},
                    success: function (data) {
                        if (data) {
                            for (var a in data) {
                                parameter.push(data[a]);
                            }
                        }

                        var crudServiceBaseUrl = "Graphics",
                        dataSource = new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: crudServiceBaseUrl + "/Binding?type=@Model.id",
                                    type: "POST"
                                },
                                update: {
                                    url: crudServiceBaseUrl + "/Edit?type=@Model.id",
                                    type: "POST"
                                },
                                destroy: {
                                    url: crudServiceBaseUrl + "/Delete?type=@Model.id",
                                    type: "POST"
                                },
                                create: {
                                    url: crudServiceBaseUrl + "/Create",
                                    type: "POST"
                                },
                                parameterMap: function (options, operation) {
                                    if (operation !== "read" && options.models) {
                                        var result = {};

                                        for (var i = 0; i < options.models.length; i++) {
                                            var product = options.models[i];

                                            for (var member in product) {
                                                if (member == "lokasi_sampling") {
                                                    result["models[" + i + "].id_lokasi"] = product[member].id;
                                                } else if (member == "graphic_parameter") {
                                                    result["models[" + i + "].id_parameter"] = product[member].id;
                                                } else if (member == "is_galat") {
                                                    result["models[" + i + "]." + member] = product[member] ? 1 : 0;
                                                } else if (member == "date") {
                                                    result["models[" + i + "]." + member] = (product[member].getMonth() + 1) + "/" + product[member].getDate() + "/" + product[member].getFullYear();
                                                } else {
                                                    result["models[" + i + "]." + member] = product[member];
                                                }
                                            }
                                        }

                                        return result;
                                    }
                                }
                            },
                            batch: true,
                            pageSize: 30,
                            schema: {
                                model: {
                                    id: "id",
                                    fields: {
                                        id: { editable: false },
                                        date: { type: 'date', format: "{0:dd/MM/yyyy}" },
                                        id_lokasi: { type: 'number' },
                                        id_parameter: { type: 'number' },
                                        hasil_analisis: {},
                                        type: { editable: false, defaultValue: '@Model.id' },
                                        is_galat: { type: 'boolean' }
                                    }
                                }
                            },
                            pageSize: 10
                        });

                        $("#grid-graphic-data").kendoGrid({
                            dataSource: dataSource,
                            pageable: true,
                            sortable: true,
                            filterable: true,
                            toolbar: [
                                { name: "create" },
                                { command: { text: "Export Data", click: exportData }, title: "Export Data of @Model.name", width: "140px", name: "export" }
                            ],
                            columns: [
                                { field: "id", hidden: true },
                                { field: "date", title: "Date", type: "date", width: 125, format: "{0:dd/MM/yyyy}" },
                                {
                                    field: "id_lokasi", title: "Sampling Location", editor: lokasiDropDownEditor, template: "#=getLokasi(id_lokasi)#", filterable: {
                                        ui: lokasiFilter,
                                        operators: {
                                            number: {
                                                eq: "Is equal to",
                                                neq: "Is not equal to"
                                            }
                                        },
                                        extra: false,
                                    },
                                },
                                {
                                    field: "id_parameter", title: "Parameter", editor: parameterDropDownEditor, template: "#=getParameter(id_parameter)#", filterable: {
                                        ui: parameterFilter,
                                        operators: {
                                            number: {
                                                eq: "Is equal to",
                                                neq: "Is not equal to"
                                            }
                                        },
                                        extra: false,
                                    },
                                },
                                { field: "hasil_analisis", title: "Analysis Result", width: 140, editor: hasilAnalisisEditor, template: "#=getHasil(is_galat,hasil_analisis)#", },
                                { field: "type", hidden: true },
                                { command: ["edit", "destroy"], width: "192px" }
                            ],
                            editable: "inline",
                            height: 400
                        });

                        function lokasiDropDownEditor(container, options) {
                            $('<input required data-text-field="name" data-value-field="id" data-bind="value:' + options.field + '"/>')
                                .appendTo(container)
                                .kendoDropDownList({
                                    autoBind: true,
                                    dataSource: {
                                        transport: {
                                            dataType: "json",
                                            read: crudServiceBaseUrl + "/BindingLokasiSampling?type=@Model.id"
                                        }
                                    },
                                    optionLabel: "--Select Value--",
                                });
                        }

                        function parameterDropDownEditor(container, options) {
                            $('<input required data-text-field="name" data-value-field="id" data-bind="value:' + options.field + '"/>')
                                .appendTo(container)
                                .kendoDropDownList({
                                    autoBind: true,
                                    dataSource: {
                                        transport: {
                                            dataType: "json",
                                            read: crudServiceBaseUrl + "/BindingParameter?type=@Model.id"
                                        }
                                    },
                                    optionLabel: "--Select Value--",
                                });
                        }

                        function hasilAnalisisEditor(container, options) {
                            var input2 = $("<label for='checkbox' style='width:30px;display:inline-block'><input name='is_galat' id='checkbox' type='checkbox' value='1' style='margin-top:0'/> < </label>");
                            input2.appendTo(container);
                            var input = $("<input/>");
                            // set its name to the field to which the column is bound ('name' in this case)
                            input.attr("name", options.field);
                            input.attr("style", "width:93px");
                            // append it to the container
                            input.appendTo(container);
                            input.kendoNumericTextBox();
                        }

                        function lokasiFilter(element) {
                            element.kendoDropDownList({
                                dataTextField: "name",
                                dataValueField: "id",
                                dataSource: lokasi,
                                optionLabel: "--Select Value--",
                            });
                        }

                        function parameterFilter(element) {
                            element.kendoDropDownList({
                                dataTextField: "name",
                                dataValueField: "id",
                                dataSource: parameter,
                                optionLabel: "--Select Value--",
                            });
                        }

                        function exportData(e) {
                            e.preventDefault();
                            $.ajax({
                                url: "Graphics/ExportData?id=@Model.id",
                                type: 'get',
                                dataType: 'json',
                                data: {},
                                success: function (data) {
                                    // do nothing
                                }
                            });
                        }

                        document.title = "Enviro - @Model.name Environmental Monitoring Data";
                        unload();
                    }
                });
            }
        });

        
    }

    function getLokasi(id_lokasi) {
        for (var i = 0, length = lokasi.length; i < length; i++) {
            if (lokasi[i].id == id_lokasi) {
                return lokasi[i].name;
            }
        }
    }

    function getHasil(is_galat, hasil_analisis) {
        retVal = '';
        if (is_galat) {
            retVal += '< ';
        }
        retVal += hasil_analisis;
        return retVal;
    }

    function getParameter(id_parameter) {
        for (var i = 0, length = parameter.length; i < length; i++) {
            if (parameter[i].id == id_parameter) {
                return parameter[i].name;
            }
        }
    }
</script>