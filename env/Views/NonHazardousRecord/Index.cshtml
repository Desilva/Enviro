@{
    Layout = null;
    ViewBag.Title = "Enviro - Non Hazardous Waste Record";
    
}
<div id="content-header">
	<h1>Waste Unit</h1>
</div>
<div id="breadcrumb">
	<a href="#" title="Go to Master Data" class="tip-bottom home"><i class="icon-home"></i> Waste Record</a>
	<a href="#" class="current">Non Hazardous Waste Record</a>
</div>
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12">
            <div class="widget-box">
		        <div class="widget-title">
			        <span class="icon">
				        <i class="icon-align-justify"></i>									
			        </span>
			        <h5>Non Hazardous Waste Record</h5>
		        </div>
		        <div class="widget-content nopadding">
                    <div id="grid-non-hazard" class="span12"></div>
		        </div>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <div class="widget-box">
		        <div class="widget-title">
			        <span class="icon">
				        <i class="icon-align-justify"></i>									
			        </span>
			        <h5>Import Non-Hazardous Waste Record From Excel</h5>
		        </div>
		        <div class="widget-content nopadding">
                    <div class="container-fluid">
                        @using (Html.BeginForm("Index", "UploadExcel", FormMethod.Post, new {id = "formUpload", enctype = "multipart/form-data", name = "formUpload", target = "upload_target" }))
                        {
                            <div class="row-fluid">
		                        <div class="span12 info_inside_left">Excel File (.xls) :</div>
                            </div>
                            <div class="row-fluid">
                                <div class="span12">
                                    <input type="text" id="fileName" class="file_input_textbox" readonly="readonly" />
                                    <div class="file_input_div" style="width:200px">
			                            <input type="button" value="Browse" class="file_input_button btn btn-default" style="width: 75px;"/>
			                            <input type="file" class="file_input_hidden" name="userfile" onchange="javascript: document.getElementById('fileName').value = this.value" />
		                            </div>
                                </div>
                            </div>
		                    <div class="row-fluid">
                                <div class="span12">
                                    <input type="button" class="btn btn-default" value="Upload" onclick="javascript: if (document.formUpload.userfile.value.length == 0) { alert('You must specify a file first.'); return; }; submit();" />
                                </div>
                            </div>
                        }
                        <br />
                    </div>
		        </div>
            </div>
        </div>
        <div class="span6">
            <div class="widget-box">
		        <div class="widget-title">
			        <span class="icon">
				        <i class="icon-align-justify"></i>									
			        </span>
			        <h5>Error Log Import Excel</h5>
		        </div>
		        <div class="widget-content nopadding">
                    <iframe id="upload_target" name="upload_target" src="" height="135" style="border:0px solid #fff;width:100%"></iframe>
		        </div>
            </div>
        </div>
    </div>
</div>
<script>
    $('#upload_target').load(function () {
        $("#grid-non-hazard").data("kendoGrid").dataSource.read();
    });

    var types = [];
    loadTypes();

    $(document).ready(function () {
        var crudServiceBaseUrl = "NonHazardousRecord",
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: crudServiceBaseUrl + "/Binding",
                        dataType: "json"
                    },
                    update: {
                        url: crudServiceBaseUrl + "/Edit",
                        type: "POST",
                        complete: function (e) {
                            $("#grid-non-hazard").data("kendoGrid").dataSource.read();
                        }
                    },
                    destroy: {
                        url: crudServiceBaseUrl + "/Delete",
                        type: "POST",
                        complete: function (e) {
                            $("#grid-non-hazard").data("kendoGrid").dataSource.read();
                        }
                    },
                    create: {
                        url: crudServiceBaseUrl + "/Create",
                        type: "POST",
                        complete: function (e) {
                            $("#grid-non-hazard").data("kendoGrid").dataSource.read();
                        }
                    },
                    parameterMap: function (options, operation) {
                        if (operation !== "read" && options.models) {
                            var result = {};

                            for (var i = 0; i < options.models.length; i++) {
                                var product = options.models[i];

                                for (var member in product) {
                                    console.log(member);
                                    if (member == "type_name") {
                                        result["models[" + i + "].id_type"] = product[member].id;
                                    } else if (member == "date") {
                                        result["models[" + i + "]." + member] = (product[member].getMonth() + 1) + "/" + product[member].getDate() + "/" + product[member].getFullYear();
                                    } else {
                                        result["models[" + i + "]." + member] = product[member];
                                    }
                                }
                            }
                            console.log(result);
                            return result;
                        }
                    },
                },
                batch: true,
                pageSize: 30,
                schema: {
                    model: {
                        id: "id",
                        fields: {
                            id: { editable: false },
                            date: { type: 'date', format: "{0:dd/MM/yyyy}" },
                            id_type: { type:"number" },
                            waste_in : { type: 'number' },
                            waste_out : { type: 'number' },
                            recycle_rate: { type: 'number', editable: false }
                        }
                    }
                },
                pageSize: 10
            });

        $("#grid-non-hazard").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            sortable: true,
            filterable: true,
            toolbar: ["create"],
            columns: [
                { field: "id", hidden: true },
                { field: "date", title: "Date", type: "date", width: 125, format: "{0:dd/MM/yyyy}" },
                {
                    field: "id_type", title: "Type of Waste", editor: typeDropDownEditor, template: "#=getWasteType(id_type)#", filterable: {
                        ui: typeFilter,
                        operators: {
                            number: {
                                eq: "Is equal to",
                                neq: "Is not equal to"
                            }
                        },
                        extra: false,
                    },
                },
                { field: "waste_in", title: "Waste In", width: 125 },
                { field: "waste_out", title: "Waste Out", width: 125 },
                { field: "recycle_rate", title: "Recycle Rate (%)", width: 140, format: "{0:n2}" },
                { command: ["edit", "destroy"], width: "192px" }
            ],
            editable: "inline",
            height: 400
        });

        function typeDropDownEditor(container, options) {
            $('<input required data-text-field="name" data-value-field="id" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: true,
                    dataSource: {
                        transport: {
                            dataType: "json",
                            read: crudServiceBaseUrl + "/BindingDropDown"
                        }
                    }
                });
        }

        function typeFilter(element) {
            element.kendoDropDownList({
                dataTextField: "name",
                dataValueField: "id",
                dataSource: {
                    transport: {
                        dataType: "json",
                        read: crudServiceBaseUrl + "/BindingDropDown"
                    }
                },
                optionLabel: "--Select Value--",
            });
        }

        unload();
    });

    function getWasteType(type) {
        for (var i = 0, length = types.length; i < length; i++) {
            if (types[i].id == type) {
                return types[i].name;
            }
        }
    }

    function loadTypes() {
        $.ajax({
            url: "NonHazardousRecord/BindingDropDown",
            type: 'get',
            dataType: 'json',
            data: {},
            success: function (data) {
                if (data) {
                    for (var a in data) {
                        types.push(data[a]);
                    }
                }
            }
        });
    }
</script>